h1. SVPullToRefresh

SVPullToRefresh allows you to easily add pull-to-refresh functionality to any @UIScrollView@ subclass with only 1 line of code. Instead of depending on delegates and/or subclassing @UIViewController@, SVPullToRefresh extends @UIScrollView@ with a @addPullToRefreshWithActionHandler:@ method as well as a @pullToRefreshView@ property.

**Only add pull-to-refresh functionality to your app if it makes sense!** Pull to refresh is only appropriate if the data is sorted chronologically, so that scrolling past the top of the table view (where the newest data lies) should trigger the loading and display of even newer data.

h2. Installation

* Drag the @SVPullToRefresh/SVPullToRefresh@ folder into your project. 
* Add the *QuartzCore* framework to your project.
* @#import "SVPullToRefresh.h"@

h2. Usage

(see sample Xcode project in @/Demo@)

Adding pull-to-refresh to a table view can be done with one single line of code:

<pre>
[tableView addPullToRefreshWithActionHandler:^{
    // refresh data
    // call [tableView.pullToRefreshView stopAnimating] when done
}];
</pre>

If you'd like to programmatically trigger the refresh (for instance in viewDidLoad), you can do so with:

<pre>
[tableView.pullToRefreshView triggerRefresh];
</pre>

h2. Customization

The SVPullToRefresh view can be customized using the following properties:

<pre>
@property (nonatomic, strong) UIColor *arrowColor;
@property (nonatomic, strong) UIColor *textColor;
@property (nonatomic, readwrite) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
</pre>

You can access these properties through your scroll view's @pullToRefreshView@ property. 

For instance, you would set the @arrowColor@ property using:

<pre>
tableView.pullToRefreshView.arrowColor = [UIColor whiteColor];
</pre>

h3. Showing a "Last Updated" label

If you think it's in the user's interest to display the date of the last refresh, you can set the @lastUpdatedDate@ property of @pullToRefreshView@:

<pre>
tableView.pullToRefreshView.lastUpdatedDate = nil; // will display "Last Updated: Never"
tableView.pullToRefreshView.lastUpdatedDate = [NSDate date]; // will display "Last Updated: 4/30/12 11:53 AM"
</pre>

You can also configure how the date is displayed by setting the @dateFormatter@ property:

<pre>
NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
dateFormatter.dateStyle = NSDateFormatterLongStyle;
dateFormatter.timeStyle = NSDateFormatterNoStyle;
tableView.pullToRefreshView.dateFormatter = dateFormatter;
</pre>


h2. Under the hood

SVPullToRefresh extends @UIScrollView@ by adding a new public method as well as a dynamic property (thanks "@seb_morel":http://twitter.com/seb_morel!). It uses key-value observing to track the scrollView's @contentOffset@, which removes the need for the view to be linked to the @UIScrollViewDelegate@ protocol.

h2. Credits

SVPullToRefresh is brought to you by "Sam Vermette":http://samvermette.com and "contributors to the project":https://github.com/samvermette/SVPullToRefresh/contributors. If you have feature suggestions or bug reports, feel free to help out by sending pull requests or by "creating new issues":https://github.com/samvermette/SVPullToRefresh/issues/new. If you're using SVPullToRefresh in your project, attribution would be nice. 

Big thanks to "@seb_morel":http://twitter.com/seb_morel for his "Demistifying the Objective-C runtime":http://cocoaheadsmtl.s3.amazonaws.com/demistifying-runtime.pdf talk, which permitted the level of abstraction found in SVPullToRefresh.

Hat tip to "Loren Brichter":http://twitter.com/lorenb for inventing such a great UI mechanism.